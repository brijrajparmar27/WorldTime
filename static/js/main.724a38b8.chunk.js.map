{"version":3,"sources":["DateTimeContext.js","hooks/useFetch.js","components/SelectLocation.js","images/morning.png","images/afternoon.png","images/evening.png","images/night.png","components/LocationCard.js","components/YourLocation.js","components/OtherLocations.js","components/Header.js","App.js","index.js"],"names":["DateTimeContext","createContext","DateTimeProvider","props","useState","locationData","setLocationData","Provider","value","children","useFetch","data","setData","getData","url","a","fetch","then","raw","json","objdata","SelectLocation","areas","setAreas","useContext","continentSelect","e","selectedcontinent","target","newData","areaSelect","selectedarea","oldData","className","name","id","onChange","map","continent","area","slice","indexOf","length","LocationCard","timestamp","datetime","substring","timezone","onClick","newArray","filter","format","Date","parse","src","hrs","getHours","Morning","Aftrenoon","Evening","Night","gettimeofday","alt","YourLocation","useEffect","OtherLocations","location","idx","Header","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.724a38b8.chunk.js","sourcesContent":["import { createContext, useState} from \"react\";\r\n\r\nconst DateTimeContext = createContext();\r\n\r\nconst DateTimeProvider = (props)=>{\r\n    const [locationData, setLocationData] = useState([]);\r\n    return(\r\n        <DateTimeContext.Provider value={[locationData, setLocationData]}>\r\n            {props.children}\r\n        </DateTimeContext.Provider>\r\n    );\r\n}\r\n\r\nexport {DateTimeContext,DateTimeProvider};\r\n","import { useState } from \"react\";\r\n\r\nconst useFetch = () => {\r\n\r\n    const [data,setData] = useState();\r\n\r\n    const getData = async (url) =>{\r\n\r\n        return fetch(url)\r\n            .then((raw)=>{\r\n                return raw.json();\r\n            })\r\n            .then((objdata)=>{\r\n                setData(objdata);\r\n                return objdata;\r\n            })\r\n\r\n    }\r\n    return {data, getData};\r\n}\r\n\r\nexport default useFetch;","import { useContext, useState } from \"react\";\r\nimport { DateTimeContext } from \"../DateTimeContext\";\r\nimport useFetch from \"../hooks/useFetch\";\r\n\r\nconst SelectLocation = () => {\r\n    const continents = [\"Africa\", \"America\", \"Antarctica\", \"Asia\", \"Atlantic\", \"Australia\", \"Europe\", \"Indian\", \"Pacific\"];\r\n\r\n    const { data, getData } = useFetch();\r\n    const [areas, setAreas] = useState();\r\n    const [locationData, setLocationData] = useContext(DateTimeContext);\r\n\r\n    const continentSelect = async (e) => {\r\n        const selectedcontinent = e.target.value;\r\n        const newData = await getData(\"https://worldtimeapi.org/api/timezone/\" + selectedcontinent);\r\n        setAreas(newData);\r\n    }\r\n\r\n    const areaSelect = async (e) => {\r\n        const selectedarea = e.target.value;\r\n        await getData(\"https://worldtimeapi.org/api/timezone/\" + selectedarea)\r\n            .then((newData) => {\r\n                setLocationData(oldData=>[...oldData,newData]);\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div className=\"selectlocation\">\r\n            <div className=\"dropdown\">\r\n                <select name=\"continent\" id=\"continent\" onChange={continentSelect}>\r\n                    {\r\n                        continents.map((continent) => {\r\n                            return <option value={continent} key={continent}>{continent}</option>\r\n                        })\r\n                    }\r\n                </select>\r\n                {areas && <select name=\"areas\" id=\"areas\" onChange={areaSelect}>\r\n                    {\r\n                        areas.map((area) => {\r\n                            return <option value={area} key={area}>{area.slice(area.indexOf('/')+1,area.length)}</option>\r\n                        })\r\n                    }\r\n                </select>}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SelectLocation","export default __webpack_public_path__ + \"static/media/morning.98f72cc0.png\";","export default __webpack_public_path__ + \"static/media/afternoon.723940ab.png\";","export default __webpack_public_path__ + \"static/media/evening.20b55db3.png\";","export default __webpack_public_path__ + \"static/media/night.85864385.png\";","import { format } from \"date-fns\";\r\nimport { useContext } from \"react\";\r\nimport { DateTimeContext } from \"../DateTimeContext\";\r\nimport Morning from \"../images/morning.png\";\r\nimport Aftrenoon from \"../images/afternoon.png\";\r\nimport Evening from \"../images/evening.png\";\r\nimport Night from \"../images/night.png\";\r\n\r\nconst LocationCard = (props) => {\r\n    const timestamp = props.data.datetime.substring(0, 26);\r\n    const timezone = props.data.timezone;\r\n\r\n    const [locationData, setLocationData] = useContext(DateTimeContext);\r\n\r\n    const del = () => {\r\n        const newArray = locationData.filter((data) => {\r\n            return data.timezone !== timezone;\r\n        });\r\n\r\n        setLocationData(newArray);\r\n    };\r\n\r\n    const gettimeofday = () => {\r\n        const hrs = new Date(Date.parse(timestamp)).getHours();\r\n        if (6 <= hrs && hrs <= 11) {\r\n            return Morning;\r\n        } else if (12 <= hrs && hrs <= 16) {\r\n            return Aftrenoon;\r\n        } else if (17 <= hrs && hrs <= 20) {\r\n            return Evening;\r\n        } else if ((21 <= hrs && hrs <= 24) || (0 <= hrs && hrs <= 5)) {\r\n            return Night;\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {props.data && (\r\n                <div className=\"card\" onClick={del}>\r\n                    <div className=\"content\">\r\n                        <p className=\"place\">\r\n                            {timezone.slice(\r\n                                timezone.indexOf(\"/\") + 1,\r\n                                timezone.length\r\n                            )}\r\n                        </p>\r\n                        <p className=\"time\">\r\n                            {format(new Date(Date.parse(timestamp)), \"hh:mm a\")}\r\n                        </p>\r\n                        <p className=\"date\">\r\n                            {format(new Date(timestamp), \"EEEE, do LLL.\")}\r\n                        </p>\r\n                    </div>\r\n\r\n                    <div className=\"contain\">\r\n                        <div className=\"gradient\"></div>\r\n                        <img src={gettimeofday()} alt=\"\" />\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </>\r\n    );\r\n};\r\nexport default LocationCard;\r\n","import { useEffect, useState } from \"react\";\r\nimport LocationCard from \"./LocationCard\";\r\n\r\nconst YourLocation = ()=>{\r\n\r\n    const [data, setData] = useState();\r\n\r\n    useEffect(()=>{\r\n        fetch(\"https://worldtimeapi.org/api/ip\")\r\n        .then((raw)=>{\r\n            return raw.json();\r\n        })\r\n        .then((data)=>{\r\n            setData(data);\r\n        })\r\n    },[])\r\n\r\n    return(\r\n        <div className=\"helper\">\r\n            {\r\n                data && <div className=\"yourlocation\">\r\n                    <p className=\"annot\">Your Current Location</p>\r\n                    <LocationCard data={data}/>\r\n                </div>\r\n            }\r\n        </div>\r\n        );\r\n}\r\nexport default YourLocation;","import { useContext } from \"react\";\r\nimport { DateTimeContext } from \"../DateTimeContext\";\r\nimport LocationCard from \"./LocationCard\";\r\n\r\nconst OtherLocations = ()=>{\r\n\r\n    const [locationData, setLocationData] = useContext(DateTimeContext);\r\n\r\n    return(\r\n        <>\r\n        {\r\n            (locationData.length>0) && <div className=\"otherlocations\">\r\n                <div className=\"bruh\">\r\n                <hr/>\r\n                <div className=\"locationlist\">\r\n                {\r\n                    locationData.map((location,idx)=>{\r\n                        return <LocationCard data={location} key={idx}/>\r\n                    })\r\n                }\r\n                </div>\r\n                </div>\r\n            </div>\r\n        }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default OtherLocations;","const Header = ()=>{\r\n    return(\r\n        <div className=\"header\">\r\n            <p className=\"title\">\r\n                World Time\r\n            </p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;","import SelectLocation from \"./components/SelectLocation\";\nimport YourLocation from \"./components/YourLocation\";\nimport OtherLocations from \"./components/OtherLocations\";\nimport { DateTimeProvider } from \"./DateTimeContext\";\nimport Header from \"./components/Header\";\n\nfunction App() {\n  return (\n    <DateTimeProvider>\n      <div className=\"App\">\n          <Header/>\n          <SelectLocation/>\n          <YourLocation/>\n          <OtherLocations/>\n      </div>\n    </DateTimeProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}